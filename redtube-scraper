#!/bin/bash
# by Dominik Stanis≈Çaw Suchora <suchora.dominik7@gmail.com>
# License: GNU GPLv3

declare -r threads='16'

ucurl() {
    curl -L -g -s --user-agent 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) QtWebEngine/5.15.2 Chrome/87.0.4280.144 Safari/537.36' -H 'Accept-Encoding: gzip, deflate' --compressed "$@"
}

declare -r arg0="$(basename "$0")"

usage() {
    printf '%s [DIR] [URL]...\nArchive redtube videos metadata in json to DIR.\nUrls are taken from recursive spider starting from URL.\n' "$arg0"
}

get_page() {
    local -r name="${1#https://www.redtube.com/}"
    [ -e "$name" ] && return
    local -r t="$(ucurl "$1" | tr -d '\n\r\t')"
    {
    reliq 'script type="application/ld+json" | "%i\n"' <<< "$t" | jq -rcM --arg link "$1" ' {
        "link":$link,
        "date":.uploadDate,
        "duration":(.duration? | gsub("[^0-9]";"")),
        "thumbnail":.thumbnailUrl
    }'

    reliq '
        .title h1 .video_page_title | "%i" / sed "s/<[^>]*>([^<]*)<[^>]*>/\1/" "E",
        .channel div .video-infobox-uploader-info; a | "%i",
        .views span .video_view_count | "%i" / sed "s/ .*//",
        .rating div class="rating_percent js_rating_percent" data-percent | "%(data-percent)v",
        .tags.a a .item .video_carousel_item | "%i\n",
        .actions.a(",") script #tm_pc_player_setup | "%i" / sed "s/.*actionTags: *\"([^\"]*)\",.*/\1/" "E",
        .stars.a div class="pornstar-name pornstarPopupWrapper"; a href -class c@[0] | "https://redtube.com%(href)v\n"
    ' <<< "$t"
    } | jq -srcM '.[0] + (.[1] | .["actions"]=(.["actions"] | map(split(":") | {
        ("name"):.[0],
        ("moment"):.[1]
    })))' > "$name"
    reliq 'div #video_related_videos_one; a .video_link href | "https://www.redtube.com%(href)v\n" / sed "\#/premium/#d"' <<< "$t"
}

if [ "$#" -lt '2' ]
then
    usage >&2
    exit 1
fi

cd "$1" || exit 1
shift

t1="$(mktemp)"
trap 'rm "$t1"' HUP INT QUIT TERM PWR EXIT RETURN
while [ "$#" -gt 0 ]
do
    echo "$1" >&2
    get_page "$1"
    shift
done > "$t1"

while :
do
    [ -s "$t1" ] || exit
    j="$(sort -u "$t1")"
    for i in $j
    do
        [ "$(jobs | wc -l)" -gt "$threads" ] && wait %%
        echo "$i" >&2
        get_page "$i" &
    done > "$t1"
    wait
done
